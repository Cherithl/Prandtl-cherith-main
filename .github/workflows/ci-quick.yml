name: CI Quick
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "MPICH/GCC12"
            cc: mpicc
            cxx: mpicxx
            pkgs: "gcc-12 g++-12 mpich libmpich-dev"
          - name: "MPICH/Clang16"
            cc: mpicc
            cxx: mpicxx
            pkgs: "clang-16 lld-16 mpich libmpich-dev"
    env:
      CMAKE_BUILD_TYPE: RelWithDebInfo
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build ccache ${{ matrix.pkgs }} \
                                  cmake pkg-config
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build ccache ${{ matrix.pkgs }} \
                                  cmake pkg-config
      - name: Select compiler backend for MPI wrappers
        if: contains(matrix.pkgs, 'clang-16')
        run: |
          # Tell MPICH wrappers to use clang
          echo "MPICH_CC=clang-16" >> $GITHUB_ENV
          echo "MPICH_CXX=clang++-16" >> $GITHUB_ENV
      - name: Configure
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DBUILD_TESTING=ON \
            -DPRANDTL_QUICK=ON
      - name: Build
        run: cmake --build build -- -k 0
      - name: Smoke tests
        run: ctest --test-dir build -L smoke -j2 --output-on-failure
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-and-logs-${{ matrix.compiler }}
          path: |
            build/Testing/**/Test.xml
            build/CMakeCache.txt
            build/*.log
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: |
          pipx install cmakelang
          find . -name '*.cmake' -o -name 'CMakeLists.txt' | xargs cmake-format --check
          find . -regex '.*\.\(h\|hpp\|cc\|cpp\)$' | xargs clang-format -Werror --dry-run
